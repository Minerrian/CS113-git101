การตั้งชื่อตัวแปร
1.ห้ามเว้นช่องว่างในชื่อ
2.ห้ามใช้เครื่องหมายพิเศษยกเว้น _
3.ต้องขึ้นด้วยตัวอักษรภาษาอังกฤษ ตัวเล็ก หรือตัวใหญ่

ประเภทข้อมูลและขนาด
char = ข้อมูลประเภทstring เช่น a[10]<--จำนวนstringที่ต้องการเก็บ
int = ข้อมูลประเภทจำนวนเต็ม (signed int)
float = ข้อมูลประเภทค่าทศนิยม
double = ข้อมูลประเภทค่าทศนิยม(สามารถเก็บได้มากกว่าfloat)
short = ข้อมูลชนิดจำนวนเต็มแบบสั้น
long = ข้อมูลชนิดจำนวนเต็มแบบยาว
unsigned = เก็บค่าที่เป็นเลขจำนวนเต็มบวกเท่านั้น
signed char = เก็บค่าตั้งแต่ -127ถึง127
unsigned char = เก็บค่าตั้งแต่0-255
การใช้ sizeof ในการตรวจสอบขนาดตัวแปรและประเภทข้อมูล

\a ส่งเสียง Beep
\n ขึ้นบรรทัดใหม่
\t  แท็บในแนวนอน
\b ย้อนกลับไป 1 ตัวอักษร
\v แท็บในแนวตั้ง
\f ขึ้นหน้าใหม่
\r รหัส Return
\' แทนตัวอักษร '
\" แทนตัวอักษร "
\\ แทนตัวอักษร Backslash(\)
\000 แทนตัวอักษรที่มีค่า ASCII เท่ากับ 000 ในระบบเลขฐานแปด
\xhh แทนตัวอักษรที่มีค่า ASCII เท่ากับ  hh ในระบบเลขฐานสิบหก

การประกาศ
ตัวแปรในภาษา C ต้องถูกประกาศก่อนถูกใช้งาน
int a,b,c;
char d,e[10];

การใช้%ในprintf
%d คือ การปริ้นค่าint
%6d คือ การปริ้นค่าintอย่างน้อย6ตัว
%06d คือ การปริ้นค่าint อย่างน้อย6ตัว และปริ้น0ถ้ามันมีไม่ครบ6ตัว
%f คือ การปริ้นค่าfloat
%6fคือ การปริ้นค่าฐานสิบ 6ตัว
%.6f คือ การปริ้นค่าทศนิยม6ตัว
%2.6f คือ การปริ้นค่าทศนิยม6ตัว และฐานสิบ2ตัว

getchar() ใช้รับอักษรหรืออักขระ 1 ตัว
putchar() ใช้ส่งอักษรหรืออักขระ 1 ตัว

Operater
+ บงก
- ลบ
* คูร
/ หาร
% หารเอาแต่เศษ *ใช้กับfloat doubleไม่ได้

Bitwise operators
&	AND			1 ถ้าบิตทั้งคู่เป็น 1, ไม่เช่นนั้นเป็น 0
|	inclusive OR		1 ถ้าอย่างน้อยหนึงบิตเป็น 1, ไม่เช่นนั้นเป็น 0
^	exclusive OR		1 ถ้าทั้งสองบิตแตกต่างกัน, ไม่เช่นนั้นเป็น 0
~	bit inversion		กลับบิตจาก 1 เป็น 0 และในทางตรงข้าม
<<	Shift bits left		เลื่อนบิตไปทางซ้าย เติมบิต 0 ทางขวา
>>	Shift bits right	เลื่อนบิตไปทางขวา เติมบิต 0 ทางซ้าย

n++, ++n = n=n+1
n--, --n = n=n-1
